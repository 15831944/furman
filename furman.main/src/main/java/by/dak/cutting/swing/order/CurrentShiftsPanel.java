/*
 * To change this template, choose Tools | Templates and open the template in the draw.
 */

/*
 * CurrentShiftsPanel.java
 * 
 * Created on 06.12.2008, 12:04:41
 */

package by.dak.cutting.swing.order;

import by.dak.persistence.FacadeContext;
import by.dak.persistence.entities.Dailysheet;
import by.dak.persistence.entities.DepartmentEntity;
import by.dak.persistence.entities.ShiftEntity;

import javax.swing.table.AbstractTableModel;
import java.util.List;

/**
 * @author admin
 */
public class CurrentShiftsPanel extends javax.swing.JPanel
{

    /**
     * Creates new form CurrentShiftsPanel
     */
    public CurrentShiftsPanel()
    {
        initComponents();
        initBinding();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <draw-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableDayliShifts = new javax.swing.JTable();

        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tableDayliShifts.setModel(new javax.swing.table.DefaultTableModel(new Object[][]{{null, null},
                {null, null}, {null, null}, {null, null}}, new String[]{"DEPARTMENT", "SHIFT"}));
        tableDayliShifts.setName("tableDayliShifts"); // NOI18N
        jScrollPane1.setViewportView(tableDayliShifts);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1,
                        javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1,
                        javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE).addContainerGap()));
    }// </draw-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableDayliShifts;
    // End of variables declaration//GEN-END:variables

    private Dailysheet dailysheet;

    private void initBinding()
    {
        final List<DepartmentEntity> deparmentList = FacadeContext.getDepartmentFacade().loadAll();
        AbstractTableModel abstractTableModel = new AbstractTableModel()
        {
            public int getRowCount()
            {
                return deparmentList.size();
            }

            public int getColumnCount()
            {
                return 2;
            }

            public Object getValueAt(int rowIndex, int columnIndex)
            {
                switch (columnIndex)
                {
                    case 0:
                        return deparmentList.get(rowIndex).getName();
                    case 1:
                        List<ShiftEntity> shiftEntities = dailysheet.getShifts();
                        for (ShiftEntity shiftEntity : shiftEntities)
                        {
                            if (shiftEntity.getDepartment().getId().equals(deparmentList.get(rowIndex)))
                            {
                                return shiftEntity;
                            }
                        }
                        return null;
                    default:
                        throw new IllegalArgumentException("Invalid index " + columnIndex);
                }
            }
        };
        tableDayliShifts.setModel(abstractTableModel);
    }

    public Dailysheet getDailysheetEntity()
    {
        return dailysheet;
    }

    public void setDailysheetEntity(Dailysheet dailysheet)
    {
        this.dailysheet = dailysheet;
    }
}
