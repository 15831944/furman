package by.dak.cutting.swing.store.tabs;

import by.dak.cutting.swing.BaseTabPanel;

import javax.swing.*;
import java.awt.*;

/**
 * Tab for annexed outer files
 *
 * @author Rudak Alexei
 */
public class AnnexTab extends BaseTabPanel
{
    //private SVAnnexServiceImpl aServ;
    private JDialog dlg;

    /**
     * Creates new form AnnexTab
     */
    public AnnexTab()
    {
        initComponents();
        initEnvironment();
    }

    public AnnexTab(JDialog dlg)
    {
        this.dlg = dlg;
        initComponents();
        initEnvironment();
    }

    public void initEnvironment()
    {
        //aServ = (SVAnnexServiceImpl) JSVSystem.getModuleService("annexServiceImpl");
        grid.addMouseListener(msHdlr);
        btNew.addActionListener(btLst);
        btOpen.addActionListener(btLst);
        btDel.addActionListener(btLst);
        btDelAll.addActionListener(btLst);
        updateTableView();
    }

    public SVFile loadFile(Frame f, String title, String defDir, String fileType)
    {
        FileDialog fd = new FileDialog(f, title, FileDialog.LOAD);
        fd.setFile(fileType);
        fd.setDirectory(defDir);
        fd.setLocation(50, 50);
        fd.show();
        return new SVFile(fd.getFile(),
                fd.getDirectory() + fd.getFile());
    }

    public String saveFile(Frame f, String title, String defDir, String fileType)
    {
        FileDialog fd = new FileDialog(f, title, FileDialog.SAVE);
        fd.setFile(fileType);
        fd.setDirectory(defDir);
        fd.setLocation(50, 50);
        fd.show();
        return fd.getFile();
    }

    public void updateTableView()
    {
        //List<SVAnnex> annexes = aServ.getAnnexListForRecord(ModuleManager.getInstance().getSelModNum(), ModuleManager.getInstance().getSelRecId());
        //grid.setModel(new SVAnnexModel(annexes));
        //grid.hideColumn(0); 
    }

    public void onNew()
    {
        /*SVFile svf = loadFile(JMainDlg.mfRefer,"","",null);
        SVAnnex annex = new SVAnnex();
        annex.setFile(svf.name);
        annex.setPath(svf.path);
        annex.setMod(ModuleManager.getInstance().getSelModNum());
        annex.setObjId(ModuleManager.getInstance().getSelRecId());
        aServ.saveAnnex(annex);*/
        updateTableView();
    }

    public void onOpen()
    {
        /*Integer gr_id = grid.getId();
        if(gr_id!=-1){
            SVAnnex annex = aServ.getAnnexById(gr_id);
            if(annex!=null && annex.getPath()!=null){
                JSVSystem.launchDefaultApplication(annex.getPath());
            }
        }*/
    }

    public void onDel()
    {
        /*Integer gr_id = grid.getId();
        if(gr_id!=-1){
            aServ.delete(gr_id);
            updateTableView();
        }*/
    }

    public void onDelAll()
    {
        //aServ.deleteAnnexesForRecord(ModuleManager.getInstance().getSelModNum(), ModuleManager.getInstance().getSelRecId());
        updateTableView();
    }

    class SVFile
    {
        private String name;
        private String path;

        public SVFile(String name, String path)
        {
            this.name = name;
            this.path = path;
        }
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <draw-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grid = new by.dak.cutting.swing.BaseTable();
        jPanel3 = new javax.swing.JPanel();
        btDelAll = new javax.swing.JButton();
        btNew = new javax.swing.JButton();
        btOpen = new javax.swing.JButton();
        btDel = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        grid.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane1.setViewportView(grid);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                                .add(12, 12, 12))
        );

        add(jPanel2, java.awt.BorderLayout.CENTER);

        btDelAll.setText("Delete all");

        btNew.setText("New");

        btOpen.setText("Open");

        btDel.setText("Delete");
        btDel.setActionCommand("DEL");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .add(btDelAll)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 103, Short.MAX_VALUE)
                                .add(btNew)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btOpen)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btDel)
                                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(btDelAll)
                                        .add(btDel)
                                        .add(btOpen)
                                        .add(btNew))
                                .addContainerGap(13, Short.MAX_VALUE))
        );

        add(jPanel3, java.awt.BorderLayout.SOUTH);
    }// </draw-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDel;
    private javax.swing.JButton btDelAll;
    private javax.swing.JButton btNew;
    private javax.swing.JButton btOpen;
    private by.dak.cutting.swing.BaseTable grid;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
