/*
 * To change this template, choose Tools | Templates
 * and open the template in the draw.
 */

/*
 * LastOrderNumberInfoPanel.java
 *
 * Created on 24.05.2009, 14:33:07
 */
package by.dak.cutting.swing.order;

import by.dak.persistence.FacadeContext;
import org.jdesktop.application.Action;

/**
 * @author admin
 */
public class LastOrderNumberInfoPanel extends javax.swing.JPanel
{

    /**
     * Creates new form LastOrderNumberInfoPanel
     */
    public LastOrderNumberInfoPanel()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <draw-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        label1000 = new javax.swing.JLabel();
        textField1000 = new javax.swing.JTextField();
        label10002000 = new javax.swing.JLabel();
        textField10002000 = new javax.swing.JTextField();
        label20003000 = new javax.swing.JLabel();
        textField20003000 = new javax.swing.JTextField();
        label3000 = new javax.swing.JLabel();
        textField3000 = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setName("Form"); // NOI18N
        setLayout(new java.awt.GridBagLayout());

        label1000.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(LastOrderNumberInfoPanel.class);
        label1000.setText(resourceMap.getString("label1000.text")); // NOI18N
        label1000.setName("label1000"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(label1000, gridBagConstraints);

        textField1000.setEditable(false);
        textField1000.setMinimumSize(new java.awt.Dimension(50, 20));
        textField1000.setName("textField1000"); // NOI18N
        textField1000.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        add(textField1000, gridBagConstraints);

        label10002000.setText(resourceMap.getString("label10002000.text")); // NOI18N
        label10002000.setName("label10002000"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        add(label10002000, gridBagConstraints);

        textField10002000.setEditable(false);
        textField10002000.setText(resourceMap.getString("textField10002000.text")); // NOI18N
        textField10002000.setName("textField10002000"); // NOI18N
        textField10002000.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        add(textField10002000, gridBagConstraints);

        label20003000.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label20003000.setText(resourceMap.getString("label20003000.text")); // NOI18N
        label20003000.setName("label20003000"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        add(label20003000, gridBagConstraints);

        textField20003000.setEditable(false);
        textField20003000.setMinimumSize(new java.awt.Dimension(50, 20));
        textField20003000.setName("textField20003000"); // NOI18N
        textField20003000.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        add(textField20003000, gridBagConstraints);

        label3000.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label3000.setText(resourceMap.getString("label3000.text")); // NOI18N
        label3000.setName("label3000"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        add(label3000, gridBagConstraints);

        textField3000.setEditable(false);
        textField3000.setMinimumSize(new java.awt.Dimension(50, 20));
        textField3000.setName("textField3000"); // NOI18N
        textField3000.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        add(textField3000, gridBagConstraints);
    }// </draw-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel label1000;
    private javax.swing.JLabel label10002000;
    private javax.swing.JLabel label20003000;
    private javax.swing.JLabel label3000;
    private javax.swing.JTextField textField1000;
    private javax.swing.JTextField textField10002000;
    private javax.swing.JTextField textField20003000;
    private javax.swing.JTextField textField3000;
    // End of variables declaration//GEN-END:variables

    @Action
    public void refresh()
    {
        Long number = FacadeContext.getOrderFacade().getLastNumberBy(0L, 999L);
        if (number == null)
        {
            number = 0L;
        }
        textField1000.setText(number.toString());

        number = FacadeContext.getOrderFacade().getLastNumberBy(1000L, 1999L);
        if (number == null)
        {
            number = 0L;
        }
        textField10002000.setText(number.toString());


        number = FacadeContext.getOrderFacade().getLastNumberBy(2000L, 2999L);
        if (number == null)
        {
            number = 0L;
        }
        textField20003000.setText(number.toString());

        number = FacadeContext.getOrderFacade().getLastNumberBy(3000L, Long.MAX_VALUE);
        if (number == null)
        {
            number = 0L;
        }
        textField3000.setText(number.toString());
    }
}
