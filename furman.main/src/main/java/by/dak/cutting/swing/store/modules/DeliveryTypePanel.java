/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DeliveryTypePanel.java
 *
 * Created on 03.02.2010, 10:05:05
 */

package by.dak.cutting.swing.store.modules;

import by.dak.cutting.swing.renderer.EntityListRenderer;
import by.dak.persistence.entities.predefined.MaterialType;
import org.jdesktop.beansbinding.*;
import org.jdesktop.swingbinding.SwingBindings;

import java.beans.Beans;
import java.util.Arrays;
import java.util.List;


/**
 * @author user0
 */
public class DeliveryTypePanel extends javax.swing.JPanel
{

    private boolean editable;

    /**
     * Creates new form DeliveryTypePanel
     */
    public DeliveryTypePanel()
    {
        initComponents();
        if (!Beans.isDesignTime())
        {
            initEnvironment();
        }
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        typeComboBox = new javax.swing.JComboBox();
        typeLabel = new javax.swing.JLabel();

        setName("Form"); // NOI18N

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        typeComboBox.setName("typeComboBox"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(by.dak.cutting.CuttingApp.class).getContext().getResourceMap(DeliveryTypePanel.class);
        typeLabel.setText(resourceMap.getString("typeLabel.text")); // NOI18N
        typeLabel.setName("typeLabel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(typeLabel)
                                .addGap(18, 18, 18)
                                .addComponent(typeComboBox, 0, 299, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(typeLabel))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox typeComboBox;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables

    private MaterialType materialType;

    private void initEnvironment()
    {
        BindingGroup bindingGroup = new BindingGroup();
        typeComboBox.setRenderer(new EntityListRenderer<MaterialType>());
        List<MaterialType> typeList = Arrays.asList(MaterialType.values());
        Binding binding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE,
                typeList, typeComboBox);
        bindingGroup.addBinding(binding);

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, typeComboBox,
                BeanProperty.create("selectedItem"),
                this, BeanProperty.create("materialType"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        bindingGroup.bind();
    }

    public MaterialType getMaterialType()
    {
        return materialType;
    }

    public void setMaterialType(MaterialType materialType)
    {
        typeComboBox.setSelectedItem(materialType);
        this.materialType = materialType;
    }

    public boolean isEditable()
    {
        return editable;
    }

    public void setEditable(boolean editable)
    {
        typeComboBox.setEnabled(editable);
        this.editable = editable;
    }
}
