/*
 * To change this template, choose Tools | Templates
 * and open the template in the draw.
 */

/*
 * ItemSelector.java
 *
 * Created on 13.01.2009, 19:50:33
 */

package by.dak.cutting.swing;

import by.dak.cutting.swing.renderer.EntityListRenderer;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.swingbinding.SwingBindings;

import javax.swing.*;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.List;

/**
 * @author admin
 */
public class ItemSelector<Item> extends DPanel
{
    private List<Item> items = ObservableCollections.observableList(new ArrayList<Item>());
    private BindingGroup bindingGroup;

    /**
     * Creates new form ItemSelector
     */
    public ItemSelector()
    {
        initComponents();
        comboBoxItem.setRenderer(new EntityListRenderer<Item>());
        if (!Beans.isDesignTime())
        {
            initBindingGroup();
        }
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <draw-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        comboBoxItem = new by.dak.cutting.swing.DComboBox();
        buttonNew = new javax.swing.JButton();

        setName("ItemSelector"); // NOI18N

        comboBoxItem.setName("comboBoxItem"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(ItemSelector.class, this);
        buttonNew.setAction(actionMap.get("showNewDepartmentDialog")); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(ItemSelector.class);
        buttonNew.setText(resourceMap.getString("buttonNew.text")); // NOI18N
        buttonNew.setFocusPainted(false);
        buttonNew.setFocusable(false);
        buttonNew.setName("buttonNew"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(comboBoxItem, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonNew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboBoxItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonNew, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </draw-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonNew;
    private by.dak.cutting.swing.DComboBox comboBoxItem;
    // End of variables declaration//GEN-END:variables

    private void initBindingGroup()
    {
        bindingGroup = new BindingGroup();
        Binding binding = SwingBindings.createJComboBoxBinding(
                AutoBinding.UpdateStrategy.READ_WRITE, getItems(),
                comboBoxItem);
        bindingGroup.addBinding(binding);
        bindingGroup.bind();
    }


    public List<Item> getItems()
    {
        return items;
    }

    public void setItems(List<Item> items)
    {
        this.items.clear();
        this.items.addAll(items);
    }

    public Action getNewAction()
    {
        return buttonNew.getAction();
    }

    public void setNewAction(Action newAction)
    {
        buttonNew.setAction(newAction);
    }

    public void addItem(Item item)
    {
        items.add(item);
        comboBoxItem.setSelectedItem(item);
    }

    public JComboBox getComboBoxItem()
    {
        return comboBoxItem;
    }

    public void setEditable(boolean editable)
    {
        getComboBoxItem().setEnabled(editable);
        buttonNew.setEnabled(editable);
    }

    @Override
    public void setEnabled(boolean enabled)
    {
        super.setEnabled(enabled);
        getComboBoxItem().setEnabled(enabled);
        buttonNew.setEnabled(enabled);
    }

    @Override
    public boolean requestFocusInWindow()
    {
        return getComboBoxItem().requestFocusInWindow();
    }
}
