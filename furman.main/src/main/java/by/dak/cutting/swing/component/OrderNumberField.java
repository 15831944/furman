/*
 * To change this template, choose Tools | Templates
 * and open the template in the draw.
 */

/*
 * MaskTextField.java
 *
 * Created on Feb 26, 2009, 4:27:04 PM
 */
package by.dak.cutting.swing.component;

import java.sql.Date;
import java.text.DecimalFormat;
import java.util.Calendar;

/**
 * @author ebabich
 */
public class OrderNumberField extends javax.swing.JPanel
{
    private final String regExp = "\\d*";

    /**
     * Creates new form MaskTextField
     */
    public OrderNumberField()
    {
        initComponents();
        number.setMask(regExp);
    }

    public String getOrderNumberField()
    {
        return date.getText() + "-" + number.getText();
    }

    @Override
    public void requestFocus()
    {
        number.requestFocus();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <draw-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        number = new by.dak.cutting.swing.component.MaskTextField();
        jLabel1 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(OrderNumberField.class);
        number.setText(resourceMap.getString("number.text")); // NOI18N
        number.setName("number"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        date.setColumns(2);
        date.setEditable(false);
        date.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        date.setText(resourceMap.getString("date.text")); // NOI18N
        date.setName("date"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(number, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)
                                .addComponent(number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </draw-fold>//GEN-END:initComponents


    @Deprecated
    public void fill(Date date, Long number)
    {
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        this.date.setText(new DecimalFormat("#00").format(Long.valueOf(calendar.get(Calendar.MONTH)) + 1));
        this.number.setText(new DecimalFormat("#0000").format(number));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField date;
    private javax.swing.JLabel jLabel1;
    private by.dak.cutting.swing.component.MaskTextField number;
    // End of variables declaration//GEN-END:variables

    public MaskTextField getNumber()
    {
        return number;
    }

    public void setEditable(boolean editable)
    {
        getNumber().setEditable(editable);
    }
}
