/*
 * PanelWorkSpace.java
 *
 * Created on 1. listopad 2006, 10:52
 */

package by.dak.cutting.cut.gui;

import by.dak.cutting.cut.base.AbstractWorkSpace;
import by.dak.cutting.cut.base.CuttedElement;
import by.dak.cutting.cut.base.WorkArea;
import by.dak.cutting.cut.graphics.Draw;

import java.awt.*;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;

/**
 * @author phorny
 */
public class PanelWorkSpace extends javax.swing.JPanel
{

    private AbstractWorkSpace workSpace = null;
    private CuttedElement[] cuttedElements = null;
    private boolean showWorkAreas = false;

    /**
     * Creates new form PanelWorkSpace
     */
    public PanelWorkSpace()
    {
        initComponents();
    }

    public void setWorkSpace(AbstractWorkSpace workSpace)
    {
        this.workSpace = workSpace;
        int w = workSpace.getPlateSize().getWidth();
        int h = workSpace.getPlateSize().getHeight();
        //this.setPreferredSize(new java.awt.Dimension(w/2, h/2));
        this.setPreferredSize(new java.awt.Dimension(w, h));
        //this.setSize(200, 100);
        this.repaint();
    }

    public void setCuttedElements(CuttedElement[] cuttedElements)
    {
        this.cuttedElements = cuttedElements;
        this.repaint();
    }

    static TexturePaint texture;

    static
    {
        BufferedImage bi = new BufferedImage(5, 5, BufferedImage.TYPE_INT_RGB);
        Graphics2D big = bi.createGraphics();
        big.setBackground(Color.black);
        big.clearRect(0, 0, 5, 5);
        big.setColor(Color.gray);
        big.fillRect(0, 0, 3, 3);
        texture = new TexturePaint(bi, new Rectangle(0, 0, 5, 5));
    }

    int dc = 0;

    public void paint(Graphics g)
    {
        super.paint(g);
        //g = this.getGraphics();
/*        g.setColor(Color.black);
        Font f = new Font("serif", Font.BOLD,15);
        g.setFont(f);
        g.drawString(String.valueOf(dc++), 100, 10);
        return;*/
        if (workSpace == null) return;
        Graphics2D g2 = (Graphics2D) g;
        g.clearRect(0, 0, this.getWidth(), this.getHeight());
        float sx = (float) this.getWidth() / (float) workSpace.getPlateSize().getWidth();
        float sy = (float) this.getHeight() / (float) workSpace.getPlateSize().getHeight();
        sx = Math.min(sx, sy);//*0.95f;
        //java.awt.a
        AffineTransform at = new AffineTransform();
        at.translate(-g.getClipBounds().x, -g.getClipBounds().y);
        at.scale(sx, sy);
        g2.setTransform(at);
        //g2.setTransform(AffineTransform.getScaleInstance(sx, sx));
        //g2.setTransform(AffineTransform.getTranslateInstance(-g.getClipBounds().x, 0));

        g.setColor(new Color(128, 64, 0));
        //g2.setStroke(new BasicStroke(2));
        g2.setPaint(texture);
        Draw.fillRect(workSpace.getPlateSize().toRect(), g);
        g.setColor(Color.black);
        Draw.drawRect(workSpace.getPlateSize().toRect(), g);
        if (cuttedElements != null) Draw.drawCuttedElements(cuttedElements, g);

        if (showWorkAreas)
        {
            g.setColor(Color.white);
            for (WorkArea wa : workSpace.getWorkAreas())
            {
                Draw.drawWorkArea(wa, 0.2f, g);
            }
        }


    }

    public void setShowWorkAreas(boolean showWorkAreas)
    {
        this.showWorkAreas = showWorkAreas;
        this.repaint();
    }


    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <draw-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        setBackground(new java.awt.Color(153, 153, 255));
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(0, 350, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(0, 120, Short.MAX_VALUE)
        );
    }// </draw-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
