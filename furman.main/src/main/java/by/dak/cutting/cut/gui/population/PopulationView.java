/*
 * PopulationView.java
 *
 * Created on 10. listopad 2006, 19:08
 */

package by.dak.cutting.cut.gui.population;

import by.dak.cutting.cut.genetics.Individual;
import by.dak.cutting.cut.genetics.IndividualRating;
import by.dak.cutting.cut.genetics.Population;
import by.dak.cutting.cut.gui.CommonGui;
import by.dak.cutting.cut.gui.IndividualVisualizer;
import by.dak.cutting.cut.gui.chromosome.ChromosomesView;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;
import java.util.Comparator;

/**
 * @author Peca
 */
public class PopulationView extends javax.swing.JPanel
{

    private Population population;
    private boolean doStop;
    private int lastViewYpos = 0;
    private int lastViewXpos = 0;
    private IndividualVisualizer bestIndividualVisualizer;
    private Individual bestIndividual;

    /**
     * Creates new form PopulationView
     */
    public PopulationView(Population population)
    {
        initComponents();
        SpinnerNumberModel model = new SpinnerNumberModel(0.98f, 0.0f, 1.0f, 0.01f);
        jSpinner1.setModel(model);
        setPopulation(population);
    }

    public void setPopulation(Population population)
    {
        this.population = population;
        update();
    }

    public synchronized void update()
    {
        if (population == null) return;
        Individual best = population.getBestIndividual();
        if ((best != null) && (best.getIndividualRating() != null))
            lblBestIndividual1.setText(best.getIndividualRating().toString());
        else lblBestIndividual1.setText("");
        lblGeneration1.setText(String.valueOf(population.getGeneration()));
        lblPopulationSize1.setText(String.valueOf(population.getIndividualsCount()));
        populateList();
    }

    public synchronized void updateTitle()
    {
        lblGeneration1.setText(String.valueOf(population.getGeneration()));
    }


    private static class RatingComparator implements Comparator
    {
        public int compare(Object o1, Object o2)
        {
            Individual i1 = (Individual) o1;
            Individual i2 = (Individual) o2;
            IndividualRating r1 = i1.getIndividualRating();
            IndividualRating r2 = i2.getIndividualRating();
            if ((r1 == null) || (r2 == null)) return 0;
            else return IndividualRating.compare(r2, r1);
        }
    }


    private void populateList()
    {
        if (population == null) return;
        DefaultListModel lm = new DefaultListModel();
        Individual[] individuals = population.getIndividuals();
        Arrays.sort(individuals, new RatingComparator());  //setridime seestupne podle uspesnosti
        for (Individual ind : individuals)
        {
            lm.addElement(new IndividualItem(ind));
        }
        listIndividuals1.setModel(lm);
    }

    class LoopThread extends Thread
    {
        LoopThread()
        {
        }

        public void run()
        {
            if (population == null) return;
            int cnt = 0;
            while (!doStop)
            {
                population.nextGeneration();
                if (bestIndividual != population.getBestIndividual())
                {
                    bestIndividual = population.getBestIndividual();
                    float f = ((Double) jSpinner1.getValue()).floatValue();
                    if (bestIndividual.getRating() >= f) doStop = true;
                    if (bestIndividualVisualizer != null)
                    {
                        bestIndividualVisualizer.setIndividual(bestIndividual);
                    }
                }
                if ((cnt % 20) == 0) update();
                updateTitle();
                cnt++;
            }
            update();
        }
    }


    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <draw-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        panelLeft1 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblBestIndividual1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblPopulationSize1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblGeneration1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        buttLoop1 = new javax.swing.JButton();
        buttUpdate1 = new javax.swing.JButton();
        buttNextGeneration1 = new javax.swing.JButton();
        buttShowBest1 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        panelRight1 = new javax.swing.JPanel();
        panelIndividualInfo1 = new javax.swing.JPanel();
        buttShowChromosome1 = new javax.swing.JButton();
        buttVisualize1 = new javax.swing.JButton();
        panelIndividuaslList1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listIndividuals1 = new javax.swing.JList();

        setBackground(new java.awt.Color(204, 204, 204));
        addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentResized(java.awt.event.ComponentEvent evt)
            {
                formComponentResized(evt);
            }

            public void componentShown(java.awt.event.ComponentEvent evt)
            {
                formComponentShown(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());

        panelLeft1.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(" Population info"));
        jPanel1.setLayout(new java.awt.GridLayout(3, 2, 10, 0));

        jLabel3.setText("Best individual:");
        jPanel1.add(jLabel3);

        lblBestIndividual1.setText("lblBestIndividual1");
        jPanel1.add(lblBestIndividual1);

        jLabel2.setText("Population size:");
        jPanel1.add(jLabel2);

        lblPopulationSize1.setText("lblPopulationSize1");
        jPanel1.add(lblPopulationSize1);

        jLabel1.setText("Generation:");
        jPanel1.add(jLabel1);

        lblGeneration1.setText("lblGeneration1");
        jPanel1.add(lblGeneration1);

        panelLeft1.add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttLoop1.setText("Loop");
        buttLoop1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                buttLoop1MouseClicked(evt);
            }
        });
        jPanel2.add(buttLoop1, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 11, -1, -1));

        buttUpdate1.setText("Update");
        buttUpdate1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                buttUpdate1MouseClicked(evt);
            }
        });
        jPanel2.add(buttUpdate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 11, -1, -1));

        buttNextGeneration1.setText("Next generation");
        buttNextGeneration1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                buttNextGeneration1MouseClicked(evt);
            }
        });
        jPanel2.add(buttNextGeneration1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 56, -1, -1));

        buttShowBest1.setText("Show best");
        buttShowBest1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                buttShowBest1MouseClicked(evt);
            }
        });
        jPanel2.add(buttShowBest1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 92, -1, -1));

        jSpinner1.setValue(0.1f);
        jPanel2.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 148, 48, -1));

        jLabel4.setText("stop when rating >=");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 148, -1, -1));

        panelLeft1.add(jPanel2, java.awt.BorderLayout.CENTER);

        add(panelLeft1, java.awt.BorderLayout.WEST);

        panelRight1.addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentResized(java.awt.event.ComponentEvent evt)
            {
                panelRight1ComponentResized(evt);
            }
        });
        panelRight1.setLayout(new java.awt.BorderLayout());

        panelIndividualInfo1.setBorder(javax.swing.BorderFactory.createTitledBorder(" Individual info "));
        panelIndividualInfo1.setName("ryba");

        buttShowChromosome1.setText("Show chromosome");
        buttShowChromosome1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                buttShowChromosome1MouseClicked(evt);
            }
        });

        buttVisualize1.setText("Visualize");
        buttVisualize1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                buttVisualize1MouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout panelIndividualInfo1Layout = new org.jdesktop.layout.GroupLayout(panelIndividualInfo1);
        panelIndividualInfo1.setLayout(panelIndividualInfo1Layout);
        panelIndividualInfo1Layout.setHorizontalGroup(
                panelIndividualInfo1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(panelIndividualInfo1Layout.createSequentialGroup()
                                .add(6, 6, 6)
                                .add(panelIndividualInfo1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(buttShowChromosome1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 152, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(buttVisualize1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 152, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );
        panelIndividualInfo1Layout.setVerticalGroup(
                panelIndividualInfo1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(panelIndividualInfo1Layout.createSequentialGroup()
                                .add(buttShowChromosome1)
                                .add(1, 1, 1)
                                .add(buttVisualize1))
        );

        panelRight1.add(panelIndividualInfo1, java.awt.BorderLayout.NORTH);

        panelIndividuaslList1.setBorder(javax.swing.BorderFactory.createTitledBorder(" Individuals list "));
        panelIndividuaslList1.setLayout(new javax.swing.BoxLayout(panelIndividuaslList1, javax.swing.BoxLayout.LINE_AXIS));

        listIndividuals1.setModel(new javax.swing.AbstractListModel()
        {
            String[] strings = {"Item 1", "Item 2", "Item 3", "Item 4", "Item 5"};

            public int getSize()
            {
                return strings.length;
            }

            public Object getElementAt(int i)
            {
                return strings[i];
            }
        });
        listIndividuals1.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                listIndividuals1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listIndividuals1);

        panelIndividuaslList1.add(jScrollPane1);

        panelRight1.add(panelIndividuaslList1, java.awt.BorderLayout.CENTER);

        add(panelRight1, java.awt.BorderLayout.CENTER);
    }// </draw-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt)
    {//GEN-FIRST:event_formComponentShown

    }//GEN-LAST:event_formComponentShown

    public void showBestIndividual()
    {
        if (population == null) return;
        Individual ind = population.getBestIndividual();
        if (ind == null) return;
        this.bestIndividualVisualizer = CommonGui.visualizeIndividual(this.getWidth() + 5, 0, (Individual) ind);

        ChromosomesView chw = new ChromosomesView();
        JFrame frm = new JFrame(ind.toString());
        chw.setChromosomes(ind.getChromosomes());
        frm.getContentPane().add(chw);
        //frm.setLocation(lastViewXpos, lastViewYpos);
        //frm.setVisible(true);
        frm.pack();
    }

    private void buttShowBest1MouseClicked(java.awt.event.MouseEvent evt)
    {//GEN-FIRST:event_buttShowBest1MouseClicked
        showBestIndividual();
    }//GEN-LAST:event_buttShowBest1MouseClicked

    private void buttNextGeneration1MouseClicked(java.awt.event.MouseEvent evt)
    {//GEN-FIRST:event_buttNextGeneration1MouseClicked
        population.nextGeneration();
        update();
    }//GEN-LAST:event_buttNextGeneration1MouseClicked

    private void buttVisualize1MouseClicked(java.awt.event.MouseEvent evt)
    {//GEN-FIRST:event_buttVisualize1MouseClicked
        if (listIndividuals1.getSelectedValues().length == 1)
        {
            lastViewXpos = 0;
            lastViewYpos = 0;
        }
        for (Object ind : listIndividuals1.getSelectedValues())
        {
            IndividualVisualizer iv = CommonGui.visualizeIndividual(0, 0, ((IndividualItem) ind).getIndividual());
            if (iv == null) continue;
            JFrame frm = iv.show(lastViewXpos, lastViewYpos);
            frm.setLocation(lastViewXpos, lastViewYpos);
            lastViewYpos += frm.getHeight();
            if (lastViewYpos + frm.getHeight() >= java.awt.Toolkit.getDefaultToolkit().getScreenSize().getHeight())
            {
                lastViewYpos = 0;
                lastViewXpos += frm.getWidth();
            }
        }
    }//GEN-LAST:event_buttVisualize1MouseClicked

    private void listIndividuals1ValueChanged(javax.swing.event.ListSelectionEvent evt)
    {//GEN-FIRST:event_listIndividuals1ValueChanged
        Object[] o = listIndividuals1.getSelectedValues();
        if (o.length == 0) return;
        Individual ind = ((IndividualItem) o[0]).getIndividual();
        if (bestIndividualVisualizer != null)
        {
            bestIndividualVisualizer.setIndividual(ind);
        }
    }//GEN-LAST:event_listIndividuals1ValueChanged

    private void buttShowChromosome1MouseClicked(java.awt.event.MouseEvent evt)
    {//GEN-FIRST:event_buttShowChromosome1MouseClicked
        for (Object o : listIndividuals1.getSelectedValues())
        {
            Individual ind = ((IndividualItem) o).getIndividual();
            ChromosomesView chw = new ChromosomesView();
            chw.setChromosomes(ind.getChromosomes());
            JFrame frm = new JFrame(ind.toString());
            frm.getContentPane().add(chw);
            frm.setLocation(lastViewXpos, lastViewYpos);
            frm.setVisible(true);
            frm.pack();
            lastViewYpos += frm.getHeight();
            if (lastViewYpos + frm.getHeight() >= java.awt.Toolkit.getDefaultToolkit().getScreenSize().getHeight())
            {
                lastViewYpos = 0;
                lastViewXpos += frm.getWidth();
            }

        }

    }//GEN-LAST:event_buttShowChromosome1MouseClicked

    private void buttLoop1MouseClicked(java.awt.event.MouseEvent evt)
    {//GEN-FIRST:event_buttLoop1MouseClicked
        JFrame frm = new JFrame();
        JButton butt = new JButton("Stop");
        //frm.getContentPane().add(butt);
        //frm.setSize(250, 120);
        Dimension dim = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        //frm.setVisible(true);

        //JDialog diag = new JDialog()
        final JDialog d = new JDialog(frm, "", true);
        d.setAlwaysOnTop(true);
        d.setModal(true);
        butt.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                doStop = true;
                d.setVisible(false);
                update();
            }
        });
        d.add(butt);
        d.pack();

        LoopThread t = new LoopThread();
        doStop = false;
        t.setPriority(java.lang.Thread.MIN_PRIORITY);
        t.start();
        d.setSize(150, 120);
        d.setLocation((int) (dim.getWidth() - d.getWidth()) / 2, (int) (dim.getHeight() - d.getHeight()) / 2);
        d.setVisible(true);

    }//GEN-LAST:event_buttLoop1MouseClicked

    private void buttUpdate1MouseClicked(java.awt.event.MouseEvent evt)
    {//GEN-FIRST:event_buttUpdate1MouseClicked
        update();
    }//GEN-LAST:event_buttUpdate1MouseClicked

    private void panelRight1ComponentResized(java.awt.event.ComponentEvent evt)
    {//GEN-FIRST:event_panelRight1ComponentResized
        /*   panelIndividualInfo1.setLocation(0, 0);
        panelIndividualInfo1.setSize(panelIndividualInfo1.getParent().getWidth(), 100);
        panelIndividuaslList1.setLocation(0, panelIndividualInfo1.getHeight());
        panelIndividuaslList1.setSize(panelIndividualInfo1.getParent().getWidth(), panelIndividualInfo1.getParent().getHeight() - panelIndividualInfo1.getHeight());
        panelIndividuaslList1.validate();*/
    }//GEN-LAST:event_panelRight1ComponentResized

    private void formComponentResized(java.awt.event.ComponentEvent evt)
    {//GEN-FIRST:event_formComponentResized
        /*    panelLeft1.setLocation(0,0);
     panelLeft1.setSize(150, getHeight());
     panelRight1.setLocation(panelLeft1.getWidth(), 0);
     panelRight1.setSize(getWidth() - panelLeft1.getWidth(), getHeight());*/
    }//GEN-LAST:event_formComponentResized


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttLoop1;
    private javax.swing.JButton buttNextGeneration1;
    private javax.swing.JButton buttShowBest1;
    private javax.swing.JButton buttShowChromosome1;
    private javax.swing.JButton buttUpdate1;
    private javax.swing.JButton buttVisualize1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel lblBestIndividual1;
    private javax.swing.JLabel lblGeneration1;
    private javax.swing.JLabel lblPopulationSize1;
    private javax.swing.JList listIndividuals1;
    private javax.swing.JPanel panelIndividualInfo1;
    private javax.swing.JPanel panelIndividuaslList1;
    private javax.swing.JPanel panelLeft1;
    private javax.swing.JPanel panelRight1;
    // End of variables declaration//GEN-END:variables

    private class IndividualItem
    {
        private Individual individual;

        public IndividualItem(Individual individual)
        {
            this.individual = individual;
        }

        public Individual getIndividual()
        {
            return individual;
        }

        @Override
        public String toString()
        {
            float normalizedRating = population.normalizeRating(this.individual.getRating());
            return individual.toString() + String.format(" (%1.2f)", normalizedRating) + " [" + individual.getSign() + "]";
        }
    }

}
