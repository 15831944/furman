package by.dak.cutting.doors.panels;

import by.dak.cutting.CuttingApp;
import by.dak.cutting.doors.Door;
import by.dak.cutting.doors.DoorImpl;
import by.dak.cutting.doors.Doors;
import by.dak.cutting.doors.DoorsImpl;
import by.dak.cutting.doors.mech.DoorColor;
import by.dak.cutting.doors.mech.DoorComponent;
import by.dak.cutting.doors.mech.DoorMechDef;
import by.dak.cutting.doors.mech.DoorMechType;
import by.dak.cutting.doors.mech.db.DoorColorFacade;
import by.dak.cutting.doors.mech.db.DoorComponentFacade;
import by.dak.cutting.doors.mech.db.DoorMechTypeFacade;
import by.dak.cutting.doors.mech.wizard.DoorMechDefController;
import by.dak.cutting.swing.ItemSelector;
import by.dak.cutting.swing.component.MaskTextField;
import by.dak.persistence.FacadeContext;
import by.dak.swing.wizard.WizardDisplayerHelper;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the draw.
 */

/*
 * FirstPanel.java
 *
 * Created on 18.08.2009, 14:12:37
 */

/**
 * @author vishutinov
 */
public class DoorsInfoPanel extends javax.swing.JPanel
{
    private final String regExp = "\\d{0,20}";

    private Long widthDoors;
    private Long heightDoors;
    private Long countDoors;
    private Doors doors;

    /**
     * Creates new form FirstPanel
     */
    public DoorsInfoPanel(Doors doors)
    {
        initComponents();
        jTextField1.setMask(regExp);
        jTextField2.setMask(regExp);
        jTextField3.setMask(regExp);
        initItemSelector();

        setDoors(doors);
    }

    public void setDoors(Doors doors)
    {
        this.doors = doors;

        if (doors != null)
        {
            jTextField1.setText(doors.getWidth().toString());
            jTextField2.setText(doors.getHeigth().toString());
            jTextField3.setText(String.valueOf(doors.getDoors().size()));
            jComboBox1.getComboBoxItem().setSelectedItem(doors.getDoorMechDef());
        }
    }

    private void initItemSelector()
    {
        jComboBox1.setItems(FacadeContext.getDoorMechDefFacade().loadAll());

        Action action = new AbstractAction()
        {
            @Override
            public void actionPerformed(ActionEvent e)
            {
                DoorMechDefController doorMechDefController = new DoorMechDefController(null);
                WizardDisplayerHelper wizard = new WizardDisplayerHelper(doorMechDefController);
                wizard.showWizard();
                List<DoorMechDef> list = new ArrayList<DoorMechDef>();
                if (!jComboBox1.getItems().isEmpty())
                {
                    list.addAll(jComboBox1.getItems());
                }
                list.add(doorMechDefController.getDoorMechDef());
                DoorMechDef doorMechDef = doorMechDefController.getDoorMechDef();
                saveToDB(doorMechDef);
                jComboBox1.setItems(list);
                jComboBox1.getComboBoxItem().setSelectedItem(doorMechDef);
            }
        };

        action.putValue(Action.NAME, CuttingApp.getApplication().getContext().getResourceMap(DoorsInfoPanel.class).getString("newAction.text"));
        jComboBox1.setNewAction(action);
    }

    private void saveToDB(DoorMechDef doorMechDef)
    {
        FacadeContext.getDoorMechDefFacade().save(doorMechDef);
        DoorColorFacade doorColorFacade = FacadeContext.getDoorColorFacade();
        for (DoorColor doorColor : doorMechDef.getDoorColor())
        {
            doorColor.setDoorMechDef(doorMechDef);
            doorColorFacade.save(doorColor);
        }
        DoorComponentFacade doorComponentFacade = FacadeContext.getDoorComponentFacade();
        for (DoorComponent doorComponent : doorMechDef.getDoorComponent())
        {
            doorComponent.setDoorMechDef(doorMechDef);
            doorComponentFacade.save(doorComponent);
        }
        DoorMechTypeFacade doorMechTypeFacade = FacadeContext.getDoorMechTypeFacade();
        for (DoorMechType doorMechType : doorMechDef.getDoorMechType())
        {
            doorMechType.setDoorMechDef(doorMechDef);
            doorMechTypeFacade.save(doorMechType);
        }
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <draw-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // <draw-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents()
    {
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new MaskTextField();
        jTextField2 = new MaskTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new MaskTextField();
        jComboBox1 = new ItemSelector<DoorMechDef>();
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText(CuttingApp.getApplication().getContext().getResourceMap(DoorsInfoPanel.class).getString("typeMech.text"));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText(CuttingApp.getApplication().getContext().getResourceMap(DoorsInfoPanel.class).getString("width.text"));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText(CuttingApp.getApplication().getContext().getResourceMap(DoorsInfoPanel.class).getString("height.text"));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText(CuttingApp.getApplication().getContext().getResourceMap(DoorsInfoPanel.class).getString("couontDoor.text"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox1, 0, 336, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE))))
                        .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(110, 110, 110))
        );
    }// </draw-fold>

    public Long getWidthDoors() throws NumberFormatException
    {
        try
        {
            widthDoors = Long.valueOf(jTextField1.getText());
        }
        catch (NumberFormatException e)
        {
            widthDoors = new Long(0);
        }
        return widthDoors;
    }

    public Long getHeightDoors() throws NumberFormatException
    {
        try
        {
            heightDoors = Long.valueOf(jTextField2.getText());
        }
        catch (NumberFormatException e)
        {
            heightDoors = new Long(0);
        }
        return heightDoors;
    }

    public Long getCountDoors() throws NumberFormatException
    {
        try
        {
            countDoors = Long.valueOf(jTextField3.getText());
        }
        catch (NumberFormatException e)
        {
            countDoors = new Long(0);
        }
        return countDoors;
    }

    public Doors getDoors()
    {
        DoorsImpl doors;
        Long heightD = getHeightDoors();
        Long widthD = getWidthDoors();
        Long countOfDoor = getCountDoors();
        DoorMechDef doorMechDef = (DoorMechDef) jComboBox1.getComboBoxItem().getSelectedItem();
        if (this.doors == null)
        {
            doors = new DoorsImpl();
            List<Door> list = new ArrayList<Door>();

            for (int i = 0; i < countOfDoor; i++)
            {
                DoorImpl door = new DoorImpl();
                door.setHeight(heightD);
                door.setWidth(widthD / countOfDoor);
                list.add(door);
            }

            doors.setDoors(list);
        }
        else
        {
            doors = (DoorsImpl) this.doors;
            if (!(doors.getHeigth().equals(heightD) && doors.getWidth().equals(widthD) && countOfDoor.equals(new Long(doors.getDoors().size())) &&
                    doors.getDoorMechDef().getName().equals(doorMechDef.getName())))
            {
                List<Door> list = new ArrayList<Door>();

                for (int i = 0; i < countOfDoor; i++)
                {
                    DoorImpl door = new DoorImpl();
                    door.setHeight(heightD);
                    door.setWidth(widthD / countOfDoor);
                    list.add(door);
                }

                doors.setDoors(list);
            }
        }

        doors.setHeight(heightD);
        doors.setWidth(widthD);
        doors.setDoorMechDef(doorMechDef);

        this.doors = doors;
        return this.doors;
    }

    public ItemSelector<DoorMechDef> getJComboBox1()
    {
        return jComboBox1;
    }

    private ItemSelector<DoorMechDef> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private MaskTextField jTextField1;
    private MaskTextField jTextField2;
    private MaskTextField jTextField3;
}
