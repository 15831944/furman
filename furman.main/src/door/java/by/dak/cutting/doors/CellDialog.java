package by.dak.cutting.doors;

import by.dak.cutting.CuttingApp;
import by.dak.cutting.swing.order.data.TextureBoardDefPair;
import org.jhotdraw.draw.Figure;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.geom.GeneralPath;
import java.util.List;

/**
 * Created by IntelliJ IDEA.
 * User: vishutinov
 * Date: 17.08.2009
 * Time: 14:34:50
 * To change this template use File | Settings | File Templates.
 */
public class CellDialog extends javax.swing.JDialog
{
    private List<Figure> figures;
    private Door door;
    private DoorDrawing drawing;
    private GeneralPath path;
    private TextureBoardDefPair pair;

    public CellDialog(java.awt.Frame parent, boolean modal, List<Figure> figures, Door door, GeneralPath path, TextureBoardDefPair pair)
    {
        super(parent, modal);
        this.pair = pair;
        this.path = path;
        this.door = door;
//        this.drawing = door.getDoorDrawing();
        this.figures = figures;

        initComponents();
        this.setTitle(CuttingApp.getApplication().getContext().getResourceMap(CellDialog.class).getString("titel"));
    }

    public CellDialog(Dialog owner, boolean modal, List<Figure> figures, Door door, GeneralPath path, TextureBoardDefPair pair)
    {
        super(owner, modal);
        this.pair = pair;
        this.path = path;
        this.door = door;
//        this.drawing = door.getDoorDrawing();
        this.figures = figures;

        initComponents();
        this.setTitle(CuttingApp.getApplication().getContext().getResourceMap(CellDialog.class).getString("titel"));
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <draw-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents()
    {
        cellPanel = new CellPanel(pair);
        AbstractAction abstractAction = new AbstractAction()
        {
            @Override
            public void actionPerformed(ActionEvent e)
            {
                drawing.createCell(figures, cellPanel.getSelectedBoard(), cellPanel.getSelectedTexture(), path);
                drawing.getCellDrawing().fireFigureChanged();
                dispose();
            }
        };
        abstractAction.putValue(Action.NAME, CuttingApp.getApplication().getContext().getResourceMap(CellDialog.class).getString("okButton"));
        cellPanel.setOkAction(abstractAction);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(cellPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(cellPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </draw-fold>

    // Variables declaration - do not modify
    private CellPanel cellPanel;
    // End of variables declaration

}
