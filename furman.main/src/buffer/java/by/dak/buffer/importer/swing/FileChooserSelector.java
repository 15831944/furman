/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImportFileChooser.java
 *
 * Created on 16.11.2010, 16:55:44
 */

package by.dak.buffer.importer.swing;

import by.dak.utils.BindingUtils;
import by.dak.utils.DBindingGroup;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.Bindings;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.beans.Beans;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;

/**
 * @author alkoyro
 */
public class FileChooserSelector<F extends File> extends JPanel
{
    private F file;
    private DBindingGroup bindingGroup = new DBindingGroup();
    private JFileChooser fileChooser = new JFileChooser();

    public DBindingGroup getBindingGroup()
    {
        return bindingGroup;
    }

    /**
     * Creates new form ImportFileChooser
     */
    public FileChooserSelector()
    {
        addPropertyChangeListener("file", new PropertyChangeListener()
        {
            @Override
            public void propertyChange(PropertyChangeEvent evt)
            {
                BindingUtils.setSourceObject(getBindingGroup(), file);
            }
        });
        initComponents();
        if (!Beans.isDesignTime())
        {
            initBinding();
        }
    }

    private void initBinding()
    {
        Binding pathBinding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ,
                file, BeanProperty.create("path"),
                pathTextField, BeanProperty.create("text"), "pathBinding");
        pathBinding.setSourceUnreadableValue(null);
        getBindingGroup().addBinding(pathBinding);
    }


    public JFileChooser getFileChooser()
    {
        return fileChooser;
    }


    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        pathTextField = new javax.swing.JTextField();
        fileChooserButton = new javax.swing.JButton();

        pathTextField.setEditable(false);
        pathTextField.setName("pathTextField"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(FileChooserSelector.class, this);
        fileChooserButton.setAction(actionMap.get("selectFile")); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(FileChooserSelector.class);
        fileChooserButton.setText(resourceMap.getString("fileChooserButton.text")); // NOI18N
        fileChooserButton.setFocusPainted(false);
        fileChooserButton.setFocusable(false);
        fileChooserButton.setName("fileChooserButton"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(pathTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fileChooserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fileChooserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fileChooserButton;
    private javax.swing.JTextField pathTextField;
    // End of variables declaration//GEN-END:variables


    public F getFile()
    {
        return file;
    }

    public void setFile(F file)
    {
        File oldFile = this.file;
        this.file = file;
        firePropertyChange("file", oldFile, file);
        fileChooser.setSelectedFile(file);
    }


    @org.jdesktop.application.Action
    public void selectFile()
    {
        fileChooser.setDialogType(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("ZIP", "zip");
        fileChooser.addChoosableFileFilter(filter);
        int resultValue = fileChooser.showOpenDialog(this);
        if (resultValue != JFileChooser.CANCEL_OPTION)
        {
            setFile((F) fileChooser.getSelectedFile());
        }
    }
}
