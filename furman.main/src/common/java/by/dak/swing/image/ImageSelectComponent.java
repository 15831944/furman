/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImageSelectComponent.java
 *
 * Created on 20.03.2011, 20:50:24
 */

package by.dak.swing.image;

import by.dak.cutting.swing.DPanel;
import org.jdesktop.application.Application;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

/**
 * @author akoyro
 */
public class ImageSelectComponent extends DPanel {

	private String file;


	private ImageSelectDelegator imageSelectDelegator;

	/**
	 * Creates new form ImageSelectComponent
	 */
	public ImageSelectComponent() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		setName(getClass().getSimpleName());
		tfValue = new javax.swing.JTextField();
		button = new javax.swing.JButton();

		setMaximumSize(new java.awt.Dimension(32767, 23));

		tfValue.setEditable(false);
		tfValue.setEnabled(false);
		tfValue.setName("tfValue"); // NOI18N

		button.setText("jButton1");
		button.setName("button"); // NOI18N
		button.setPreferredSize(new java.awt.Dimension(75, 20));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
								.addComponent(tfValue, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(tfValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
		);

		button.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				showFileChooser();
			}
		});
	}// </editor-fold>//GEN-END:initComponents


	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton button;
	private javax.swing.JTextField tfValue;
	// End of variables declaration//GEN-END:variables


	public void setValue(String file) {
		String old = this.file;
		this.file = file;
		firePropertyChange("value", old, file);
		tfValue.setText(file);
	}


	public String getValue() {
		return this.file;
	}

	public void showFileChooser() {
		final JFileChooser fc = new JFileChooser();
		Application.getInstance().getContext().getSessionStorage().putProperty(JFileChooser.class, new FileChooserProperty());
		fc.setName(getName());
		loadProperties(fc);
		fc.addChoosableFileFilter(new ImageFilter());
		fc.setAcceptAllFileFilterUsed(false);

		//Add custom icons for file types.
		//fc.setFileView(new ImageFileView(fc));

		//Add the preview pane.
		fc.setAccessory(new ImagePreview(fc));
		int result = fc.showDialog(this, "Выбрать");
		if (result == JFileChooser.APPROVE_OPTION) {
			saveProperties(fc);
			if (getImageSelectDelegator() != null) {
				setValue(getImageSelectDelegator().delegate(fc.getSelectedFile()));
			}
		}
	}

	private void loadProperties(JFileChooser fc) {
		try {
			Application.getInstance().getContext().getSessionStorage().restore(fc, getName());
		} catch (IOException e1) {
			e1.printStackTrace();
		}
	}

	private void saveProperties(JFileChooser fc) {
		try {   //IMPORTANT: before save parent should be null
			if (fc.getParent() != null)
				fc.getParent().remove(fc);
			Application.getInstance().getContext().getSessionStorage().save(fc, getName());
		} catch (IOException e1) {
			e1.printStackTrace();
		}
	}

	public ImageSelectDelegator getImageSelectDelegator() {
		return imageSelectDelegator;
	}

	public void setImageSelectDelegator(ImageSelectDelegator imageSelectDelegator) {
		this.imageSelectDelegator = imageSelectDelegator;
	}

}
